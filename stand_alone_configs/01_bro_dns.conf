input {
  tcp {
    port => 5555
    type => "bro_dns"
  }
}


filter {
  
  
  csv {
    columns => ["timestamp","uid","source_ip","source_port","destination_ip","destination_port","protocol","transaction_id","rtt","query","query_class","query_class_name","query_type","query_type_name","rcode","rcode_name","aa","tc","rd","ra","z","answers","ttls","rejected"]
  add_tag => bro_dns

  separator => " "
  }

    date {
      match => ["timestamp", "UNIX"]
      remove_field => [ "EventTime"]
    }
  

    mutate {
    add_tag => [ "bro"]
    }

#POST PROCESSING
    if [type] == "bro_dns" {
    mutate {
      replace => { "type" => "dns" }
    }
  }
  if [type] == "dns" {
    # Used for whois lookups - can create log loop
    if [query] =~ "^whois\." {
      drop { }
    }
    # REPLACE test.int with your internal domain
    if [query] and [query] !~ "\.test\.int$" {
      mutate {
        lowercase => [ "query" ]
      }
      if [query_type_name] != "NB" and [query_type_name] != "TKEY" and [query_type_name] != "NBSTAT" and [query_type_name] != "PTR" {
        tld {
          source => "query"
        }
        ruby {
          code => "event['query_length'] = event['query'].length"
        }
        mutate {
          rename => { "[SubLog][sessionid]" => "sub_session_id" }
          rename => { "[tld][domain]" => "highest_registered_domain" }
          rename => { "[tld][trd]" => "subdomain" }
          rename => { "[tld][tld]" => "top_level_domain" }
          rename => { "[tld][sld]" => "parent_domain" }
        }
        if [parent_domain] {
          ruby {
            code => "event['parent_domain_length'] = event['parent_domain'].length"
          }
        }
        if [subdomain] {
          ruby {
            code => "event['subdomain_length'] = event['subdomain'].length"
          }
        }
      }
    }
  mutate {
    #add_tag => [ "conf_file_8006"]
  }
  }
  
#POSTPROCESS alexa
 if [type] == "dns" {
    if [highest_registered_domain] {
      rest {
        request => {
          url => "http://localhost:20000/alexa/%{highest_registered_domain}"
        }
        sprintf => true
        json => false
        target => "site"
      }
      if [site] != "0" and [site] {
        mutate {
          add_tag => [ "top-1m" ]
          remove_field => [ "site" ]
        }
      }
    }
  }

#POSTPROCESS dns creastion date

if [type] == "dns" {
    if [highest_registered_domain] and "top-1m" not in [tags] {
      rest {
        request => {
          url => "http://localhost:20000/domain/creation_date/%{highest_registered_domain}"
        }
        sprintf => true
        json => false
        target => "creation_date"
      }
      if [creation_date] =~ "No whois" {
        mutate { remove_field => [ "creation_date" ] }
      }
      if [creation_date] and [creation_date] != "" {
        grok {
          match => { "creation_date" => "(?<modified_creation_date>[12][0-9]{3}-[01][0-9]-[0-3][0-9])" }
          remove_field => [ "creation_date" ]
        }
        # Barebone creation_date - can be off by one day due to timezones
        date {
          match => [ "modified_creation_date", "yyyy-MM-dd" ]
          remove_field => [ "modified_creation_date" ]
          target => "creation_date"
        }
      }
      if [creation_date] == "" {
        mutate { remove_field => [ "creation_date" ] }
      }
    }
  }


#POSTPROCESS TAGGING

if [destination_ip] {
    if [destination_ip] =~ "^10\." or [destination_ip] =~ "^192\.168\." or [destination_ip] =~ "^172\.(1[6-9]|2[0-9]|3[0-1])\." {
      mutate {
        add_tag => [ "internal_destination" ]
      }
    } 
    if [destination_ip] =~ "^22[4-9]\." or [destination_ip] =~ "^23[0-9]\." {
      mutate {
        add_tag => [ "external_multicast", "multicast" ]
      }
    }
    if [destination_ip] == "255.255.255.255" or [destination_ip] =~ ".*\..*\..*\.255" {
      mutate {
        add_tag => [ "destination_broadcast","broadcast"]
      }
    }
    if "internal_destination" not in [tags] and "destination_broadcast" not in [tags] and "external_multicast" not in [tags] and [destination_ip] != "0.0.0.0" {
      mutate {
        add_tag => [ "external_destination" ]
      }
    }
    if "internal_destination" not in [tags] and "destination_broadcast" not in [tags] and "external_multicast" not in [tags] and [destination_ip] != "0.0.0.0" {
      mutate {
        add_tag => [ "external_destination" ]
      }
    }
    if "internal_destination" not in [tags] {
      if [destination_ip] == "198.41.0.4" or [destination_ip] == "192.228.79.201" or [destination_ip] == "192.33.4.12" or [destination_ip] == "199.7.91.13" or [destination_ip] == "192.203.230.10" or [destination_ip] == "192.5.5.241" or [destination_ip] == "192.112.36.4" or [destination_ip] == "198.97.190.53" or [destination_ip] == "192.36.148.17" or [destination_ip] == "192.58.128.30" or [destination_ip] == "193.0.14.129" or [destination_ip] == "199.7.83.42" or [destination_ip] == "202.12.27.33" {
        mutate {
          add_tag => [ "root_dns_server" ]
        }
      }
    }
    # Customize this section to your environment
    if [destination_ip] == "74.40.74.40" or [destination_ip] == "74.40.74.41" {
      mutate {
        add_tag => [ "authorized_dns_server" ]
      }
    }
  }
  if [file_ip] {
    if [file_ip] =~ "^10\." or [file_ip] =~ "^192\.168\." or [file_ip] =~ "^172\.(1[6-9]|2[0-9]|3[0-1])\." {
      mutate {
        add_tag => [ "internal_source" ]
      }
    } 
    if "internal_source" not in [tags] {
      mutate {
        add_tag => [ "external_source" ]
      }
    }
  }
  if [source_ip] {
    if [source_ip] =~ "^10\." or [source_ip] =~ "^192\.168\." or [source_ip] =~ "^172\.(1[6-9]|2[0-9]|3[0-1])\." {
      mutate {
        add_tag => [ "internal_source" ]
      }
    }
    if [source_ip] =~ "^22[4-9]\." or [source_ip] =~ "^23[0-9]\." {
      mutate {
        add_tag => [ "source_multicast", "multicast" ]
      }
    }
    if [source_ip] == "255.255.255.255" or [source_ip] == "^.*\..*\..*\.255" {
      mutate {
        add_tag => [ "source_broadcast", "broadcast"]
      }
    }
    if "internal_source" not in [tags] and "source_broadcast" not in [tags] and "source_multicast" not in [tags] and [source_ip] != "0.0.0.0" {
      mutate {
        add_tag => [ "external_source" ]
      }
    }
    if "internal_source" not in [tags] {
      if [source_ip] == "198.41.0.4" or [source_ip] == "192.228.79.201" or [source_ip] == "192.33.4.12" or [source_ip] == "199.7.91.13" or [source_ip] == "192.203.230.10" or [source_ip] == "192.5.5.241" or [source_ip] == "192.112.36.4" or [source_ip] == "198.97.190.53" or [source_ip] == "192.36.148.17" or [source_ip] == "192.58.128.30" or [source_ip] == "193.0.14.129" or [source_ip] == "199.7.83.42" or [source_ip] == "202.12.27.33" {
        mutate {
          add_tag => [ "root_dns_server" ]
        }
      }
    }
    # Customize this section to your environment
    if [destination_ip] == "74.40.74.40" and "authorized_dns_server" not in [tags] or [destination_ip] == "74.40.74.41" and "authorized_dns_server" not in [tags] {
      mutate {
        add_tag => [ "authorized_dns_server" ]
      }
    }
  mutate {
    ##add_tag => [ "conf_file_8200"]
  }
  }





}


  
  
